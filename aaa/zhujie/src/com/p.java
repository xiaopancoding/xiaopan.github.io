package com;

import org.junit.Test;

/**
 *  注解(Annotation)：其实就是代码里的一个特殊标记，  这些标记可以在编译的时候，类加载，运行时被读取，并执行相应的处理，如@Override
 *
 * @Override 这个注解就表示是重写的意思
 *
 * @Deprecated  这个注解表示  这个方法已经过时了，可以是方法也能是类，用还是可以用的，但是可能不安全
 *
 * @SupperssWarnings   这个注解表示  抑制编译器的警告
 *
 *
 *
 * 自定义注解
 *   1. 声明为  @interface
 *   2. 内部定义成员，通常使用value表示
 *   3. 可以指定成员的默认值， 用default定义
 *   4。 如果自定义注解没有成员， 表名是一个标识作用
 *   如果注解有成员，在使用注解时， 需要指明成员值
 * 自定义的注解必须配上注解的信息处理流程(使用反射)才有意义。
 *  我们自定义的注解，一般都会指明两个元注解，
 *      Retention(指明你定义的注解的生命周期),
 *      Target(指明你定义的注解能用来修饰哪些结构)
 *
 *
 *
 *
 */

public class p {

//    @SuppressWarnings()






}
